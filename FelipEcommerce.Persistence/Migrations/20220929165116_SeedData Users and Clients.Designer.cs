// <auto-generated />
using System;
using FelipEcommerce.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FelipEcommerce.Persistence.Migrations
{
    [DbContext(typeof(FelipEcommerceContext))]
    [Migration("20220929165116_SeedData Users and Clients")]
    partial class SeedDataUsersandClients
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FelipEcommerce.Domain.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "2246 Joy Lane Burbank CA 91502",
                            Age = 65,
                            Dni = "548875445",
                            FirstName = "Heather",
                            LastName = " K. Garcia",
                            Phone = "818-567-4835"
                        },
                        new
                        {
                            Id = 2,
                            Address = "1323 Merivale Road Ottawa, ON K2P 0K1",
                            Age = 76,
                            Dni = "370 670 952",
                            FirstName = "Quintin P.",
                            LastName = "Evans",
                            Phone = "613-380-4940"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Lakeview Heights, BC V1Z 1K2",
                            Age = 18,
                            Dni = "667 962 229",
                            FirstName = "Ruby C.",
                            LastName = "Crawford",
                            Phone = "416-609-6578"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Nanaimo, BC V9R 3A8",
                            Age = 38,
                            Dni = "328 840 673",
                            FirstName = "Stephanie F.",
                            LastName = "Fahey",
                            Phone = "250-816-8363"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Cranbrook, BC V1C 2R9",
                            Age = 65,
                            Dni = "598 123 990",
                            FirstName = "Hugh A.",
                            LastName = "Logan",
                            Phone = "250-417-7243"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Windsor, ON N8Y 4V1",
                            Age = 25,
                            Dni = "451 591 119",
                            FirstName = "David M.",
                            LastName = "Yang",
                            Phone = "519-981-6925"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Alexandra, PE C1B 0N7",
                            Age = 34,
                            Dni = "038 970 604",
                            FirstName = "Randall Laureano",
                            LastName = "Rodrígez",
                            Phone = "902-368-0646"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Calgary, AB T2P 0H3",
                            Age = 77,
                            Dni = "234 463 297",
                            FirstName = "Ezequías Regalado",
                            LastName = "Henríquez",
                            Phone = "403-473-8979"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Calgary, AB T2V 2W2",
                            Age = 26,
                            Dni = "544 769 607",
                            FirstName = "Carissa Gutiérrez",
                            LastName = "Sarabia",
                            Phone = "403-861-4303"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Cobourg, ON K9A 1J1",
                            Age = 36,
                            Dni = "201 756 269",
                            FirstName = "Fabrizio Vázquez",
                            LastName = "Cepeda",
                            Phone = "905-373-3704"
                        },
                        new
                        {
                            Id = 11,
                            Address = "Fort Erie, ON L2A 1P3",
                            Age = 45,
                            Dni = "342 233 863",
                            FirstName = "Achill Magana",
                            LastName = "Pedroza",
                            Phone = "289-321-0566"
                        },
                        new
                        {
                            Id = 12,
                            Address = "Toronto, ON M3H 4J1",
                            Age = 68,
                            Dni = "554 687 665",
                            FirstName = "Inalén Medrano",
                            LastName = "Lebrón",
                            Phone = "416-378-8701"
                        },
                        new
                        {
                            Id = 13,
                            Address = "Tingwick, QC J0A 1L0",
                            Age = 45,
                            Dni = "490 494 556",
                            FirstName = "Petronio Dueñas",
                            LastName = "Galindo",
                            Phone = "819-359-4816"
                        },
                        new
                        {
                            Id = 14,
                            Address = "St Catharines, ON L2N 1S8",
                            Age = 63,
                            Dni = "081 465 452",
                            FirstName = "Debra Tirado",
                            LastName = "Trejo",
                            Phone = "289-228-2329"
                        },
                        new
                        {
                            Id = 15,
                            Address = "Mission, BC V2V 1J7",
                            Age = 23,
                            Dni = "116 625 781",
                            FirstName = "Tibalt Alejandro",
                            LastName = "Velásquez",
                            Phone = "604-814-7305"
                        },
                        new
                        {
                            Id = 16,
                            Address = "Quebec, QC G1V 3V5",
                            Age = 63,
                            Dni = "079 929 295",
                            FirstName = "Justiniano Vigil",
                            LastName = "Castellanos",
                            Phone = "418-569-7055"
                        },
                        new
                        {
                            Id = 17,
                            Address = "Edmonton, AB T5C 2L2",
                            Age = 29,
                            Dni = "460 547 342",
                            FirstName = "Crisóstomo Raya",
                            LastName = "Cantú",
                            Phone = "780-475-8399"
                        },
                        new
                        {
                            Id = 18,
                            Address = "Ottawa, ON K1P 5M7",
                            Age = 37,
                            Dni = "716 623 541",
                            FirstName = "Palemon",
                            LastName = "Peres Vega",
                            Phone = "613-978-8428"
                        },
                        new
                        {
                            Id = 19,
                            Address = "Bouchette, QC H0H 0H0",
                            Age = 42,
                            Dni = "757 081 815",
                            FirstName = "Edelira",
                            LastName = "Rodrígez Muñoz",
                            Phone = "819-465-9142"
                        },
                        new
                        {
                            Id = 20,
                            Address = "Rocky Mountain House, AB T0M 1T1",
                            Age = 66,
                            Dni = "652 341 447",
                            FirstName = "Elijah",
                            LastName = "Ceja Caballero",
                            Phone = "403-846-2441"
                        },
                        new
                        {
                            Id = 21,
                            Address = "Montreal, QC H4J 1M9",
                            Age = 80,
                            Dni = "445 737 539",
                            FirstName = "Amir",
                            LastName = "Sevilla Gamez",
                            Phone = "514-377-1176"
                        },
                        new
                        {
                            Id = 22,
                            Address = "Nobel, ON P0G 1G0",
                            Age = 50,
                            Dni = "064 667 884",
                            FirstName = "Aimée",
                            LastName = "Fernández Gracia",
                            Phone = "705-342-5282"
                        },
                        new
                        {
                            Id = 23,
                            Address = "Minburn, AB T0B 3B0",
                            Age = 23,
                            Dni = "479 099 640",
                            FirstName = "Ona Negrete",
                            LastName = "Arenas",
                            Phone = "780-593-0182"
                        },
                        new
                        {
                            Id = 24,
                            Address = "Victoria, BC V8Z 2J8",
                            Age = 45,
                            Dni = "106 469 133",
                            FirstName = "Mili",
                            LastName = "Arriaga Lozada",
                            Phone = "250-881-7583"
                        });
                });

            modelBuilder.Entity("FelipEcommerce.Domain.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InventoryDate")
                        .HasColumnType("Date");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Inventory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InventoryDate = new DateTime(2022, 9, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            ProductId = 1,
                            Qty = 50,
                            Type = "XD"
                        });
                });

            modelBuilder.Entity("FelipEcommerce.Domain.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("Date");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Isv")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            Discount = 19,
                            InvoiceDate = new DateTime(2022, 9, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Isv = 0,
                            SubTotal = 1000m,
                            Total = 10000m,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FelipEcommerce.Domain.Models.InvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("InvoicesDetail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InvoiceId = 1,
                            Price = 5000m,
                            ProductId = 1,
                            Qty = 5
                        });
                });

            modelBuilder.Entity("FelipEcommerce.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Maximum")
                        .HasColumnType("int");

                    b.Property<int>("Minimum")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurshacePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "das54a5da",
                            Maximum = 708,
                            Minimum = 50,
                            Name = "Televisor",
                            PurshacePrice = 1500000m,
                            SellingPrice = 1700000m,
                            Type = "XDXDXD"
                        });
                });

            modelBuilder.Entity("FelipEcommerce.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Edwin Trevino",
                            Password = "edwingladiatoryoda123$",
                            UserName = "edwingladiatoryoda"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Donald Smith MD",
                            Password = "Donaldspinachcheetah123$",
                            UserName = "Donaldspinachcheetah"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "James Taylor",
                            Password = "jameshippopotamuspie",
                            UserName = "jamescitizenkanewind"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Todd Hobbs",
                            Password = "Toddroastpeardrumrye",
                            UserName = "Toddthegraduaterye"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Vanessa Leblanc",
                            Password = "Vanessacowriverpig",
                            UserName = "Vanessagandalftimon"
                        },
                        new
                        {
                            Id = 6,
                            FullName = "Reginald Cruz",
                            Password = "Reginaldngc5195bread",
                            UserName = "Reginaldpomegranate"
                        },
                        new
                        {
                            Id = 7,
                            FullName = "John Collins",
                            Password = "Johnbirthdaycakelog",
                            UserName = "Johnspiralshapeflute"
                        },
                        new
                        {
                            Id = 8,
                            FullName = "Juan Ball",
                            Password = "Juanplatoonfrognet",
                            UserName = "Juanrearwindowbridge"
                        },
                        new
                        {
                            Id = 9,
                            FullName = "Brian Henry",
                            Password = "Brianbatthegoldrush",
                            UserName = "Brianastronoutwine"
                        },
                        new
                        {
                            Id = 10,
                            FullName = "Kathleen Ramirez",
                            Password = "Kathleenhaloakirapig",
                            UserName = "Kathleenxylophonered"
                        });
                });

            modelBuilder.Entity("FelipEcommerce.Domain.Models.Inventory", b =>
                {
                    b.HasOne("FelipEcommerce.Domain.Models.Product", "Product")
                        .WithOne("Inventory")
                        .HasForeignKey("FelipEcommerce.Domain.Models.Inventory", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FelipEcommerce.Domain.Models.Invoice", b =>
                {
                    b.HasOne("FelipEcommerce.Domain.Models.Client", "Client")
                        .WithMany("Invoices")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FelipEcommerce.Domain.Models.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FelipEcommerce.Domain.Models.InvoiceDetail", b =>
                {
                    b.HasOne("FelipEcommerce.Domain.Models.Invoice", "Invoice")
                        .WithOne("InvoiceDetail")
                        .HasForeignKey("FelipEcommerce.Domain.Models.InvoiceDetail", "InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FelipEcommerce.Domain.Models.Product", "Product")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FelipEcommerce.Domain.Models.Client", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("FelipEcommerce.Domain.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceDetail");
                });

            modelBuilder.Entity("FelipEcommerce.Domain.Models.Product", b =>
                {
                    b.Navigation("Inventory");

                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("FelipEcommerce.Domain.Models.User", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
